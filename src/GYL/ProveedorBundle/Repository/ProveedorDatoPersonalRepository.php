<?php

namespace GYL\ProveedorBundle\Repository;

/**
 * PersonaFisicaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProveedorDatoPersonalRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * Obtener el primer dato personal del usuario
     *
     * @param integer $idUsuario
     * @return array
     */
    public function getPrimerDatoPersonal($idUsuario)
    {
        $em  = $this->getEntityManager('adif_proveedores');
        $sql = "SELECT min(id) as idDatoPersonal FROM proveedor_dato_personal WHERE id_usuario = :idUsuario";

        $stmt = $em->getConnection()->prepare($sql);
        $stmt->bindValue('idUsuario', $idUsuario);
        $stmt->execute();
        return $result = $stmt->fetchAll();
    }

    /**
     * Obtener los id de datos personales vinculados al usuario
     *
     * @param integer $idUsuario
     * @return array
     */
    public function getIdDatoPersonalUser($idUsuario)
    {
        $em  = $this->getEntityManager('adif_proveedores');
        $sql = "SELECT id FROM proveedor_dato_personal WHERE id_usuario = :idUsuario";

        $stmt = $em->getConnection()->prepare($sql);
        $stmt->bindValue('idUsuario', $idUsuario);
        $stmt->execute();
        return $result = $stmt->fetchAll();
    }

    /**
     * busca cuit en adif_proveedores.proveedor_dato_personal y adif_provedores.proveedor_evaluacion
     *
     * @param integer $cuit
     * @return array
     */
    public function findCuitInPortal($cuit)
    {
        $em  = $this->getEntityManager('adif_proveedores');
        $sql = "SELECT * FROM adif_proveedores.proveedor_dato_personal as pdp INNER JOIN adif_proveedores.proveedor_evaluacion as pe
                  ON pdp.id = pe.id_proveedor_dato_personal WHERE pdp.cuit = :cuit AND pe.id_estado_evaluacion != 3;";

        $stmt = $em->getConnection()->prepare($sql);
        $stmt->bindValue('cuit', $cuit);
        $stmt->execute();
        return $result = $stmt->fetchAll();
    }

    /**
     * busca cuit en adif_compras.cliente_proveedor
     *
     * @param integer $cuit
     * @return array
     */
    public function findCuitInSIGA($cuit)
    {
        $em  = $this->getEntityManager('adif_proveedores');
        $sql = "SELECT * FROM adif_compras.cliente_proveedor WHERE CUIT = :cuit";

        $stmt = $em->getConnection()->prepare($sql);
        $stmt->bindValue('cuit', $cuit);
        $stmt->execute();
        return $result = $stmt->fetchAll();
    }

    /**
     * busca cbu en adif_compras.cliente_proveedor
     *
     * @param integer $cbu
     * @param integer $idDatoPersonal
     * @return array
     */
    public function findCBUInSIGA($cbu, $idDatoPersonal)
    {
        $em  = $this->getEntityManager('adif_rrhh');
        $sql = "SELECT * FROM adif_rrhh.cuenta C 
                    LEFT JOIN adif_compras.proveedor P ON C.id = P.id_cuenta 
                    LEFT JOIN adif_proveedores.proveedor_dato_personal DP ON ( P.id = DP.proveedor_id AND DP.id = :idDatoPersonal )
                        WHERE C.cbu = :cbu AND DP.id is null";

        $stmt = $em->getConnection()->prepare($sql);
        $stmt->bindValue('idDatoPersonal', $idDatoPersonal);
        $stmt->bindValue('cbu', $cbu);
        $stmt->execute();
        return $result = $stmt->fetchAll();
    }

    /**
     * busca cbu en adif_proveedores.proveedor_dato_bancario
     *
     * @param integer $cbu
     * @param integer $idDatoPersonal
     * @return array
     */
    public function findCBUInPortal($cbu, $idDatoPersonal)
    {
        $em  = $this->getEntityManager('adif_proveedores');
        $sql = "SELECT * FROM adif_proveedores.proveedor_dato_bancario WHERE cbu = :cbu AND id_proveedor_dato_personal != :iddatopersonal";

        $stmt = $em->getConnection()->prepare($sql);
        $stmt->bindValue('cbu', $cbu);
        $stmt->bindValue('iddatopersonal', $idDatoPersonal);
        $stmt->execute();
        return $result = $stmt->fetchAll();
    }
}
